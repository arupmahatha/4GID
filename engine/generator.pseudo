Class SQLGenerator:
    Initialize:
        - LLM instance from llm_call.py
        - Schema metadata instance from metadata.py

    Function main_generator(user_query):
        /*
        Purpose: Generate a single SQL query using LLM based on user query and schema.
                The query can be simple or complex depending on the user's needs.
        Returns: Dictionary containing metadata and the generated SQL query (no additional text/explanations)
        */
        1. Format table and column information:
            - Create empty result string
            - For each table in metadata.tables:
                Get column names and format as:
                "table_name (column1, column2, ...)"
            - Join all with newlines to create formatted_metadata

        2. Create initial prompt:
            "Given these tables and columns:
             {formatted_metadata}
             
             Generate a single SQL query for this request:
             {user_query}
             
             Requirements:
             - Return ONLY the raw SQL query text, no markdown formatting
             - Do not include ```sql or ``` markers
             - No explanations or additional text
             - The query can be simple or complex depending on what's needed
             - Use appropriate JOINs, subqueries, or aggregations if required
             - Ensure the query is complete and executable"

        3. Get SQL from LLM using llm_call.generate_text()

        4. Return dictionary containing:
            {
                "user_query": original user query,
                "formatted_metadata": formatted table and column information,
                "generated_sql": SQL generated in step 3 (single query only)
            }